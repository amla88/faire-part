name: Build & Deploy Angular to GitHub Pages

on:
  push:
    branches:
      - v2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Build Angular app
        run: npm run build
      - name: Vérification du build
        run: ls -l dist/faire-part
      - name: Upload build output (artefact)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/faire-part

  spa-fallback:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build output (artefact)
        uses: actions/download-artifact@v4
        with:
          pattern: build-artifact
          merge-multiple: true
          path: dist/faire-part
      - name: Vérification artefact
        run: ls -l dist/faire-part
      - name: Copie du fallback SPA (404.html)
        run: cp dist/faire-part/index.html dist/faire-part/404.html
      - name: Injection des clés Supabase dans les meta tags
        run: |
          SB_URL="${{ secrets.VITE_SUPABASE_URL }}"
          SB_ANON="${{ secrets.VITE_SUPABASE_ANON_KEY }}"
          if [ -n "$SB_URL" ] && [ -n "$SB_ANON" ]; then
            for f in ./dist/faire-part/index.html ./dist/faire-part/404.html; do \
              sed -i -E 's|<meta name="supabase-url"[^>]*>|<meta name="supabase-url" content="'"$SB_URL"'"/>|g' "$f"; \
              sed -i -E 's|<meta name="supabase-anon-key"[^>]*>|<meta name="supabase-anon-key" content="'"$SB_ANON"'"/>|g' "$f"; \
            done
          else
            echo "Skipping Supabase meta injection: secrets not set."
          fi
      - name: Upload SPA fallback (artefact)
        uses: actions/upload-artifact@v4
        with:
          name: spa-fallback-artifact
          path: dist/faire-part

  deploy:
    runs-on: ubuntu-latest
    needs: spa-fallback
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download SPA fallback (artefact)
        uses: actions/download-artifact@v4
        with:
          pattern: spa-fallback-artifact
          merge-multiple: true
          path: dist/faire-part
      - name: Vérification artefact final
        run: ls -l dist/faire-part
      - name: Déploiement sur GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/faire-part
          publish_branch: gh-pages
          force_orphan: true